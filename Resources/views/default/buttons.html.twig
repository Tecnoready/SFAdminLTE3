{% extends "@SFAdminLTE3/default/base_macros.html.twig" %}

{% macro show_actions(params) %}
    {% import '@SFAdminLTE3/default/buttons.html.twig' as buttons %}

    {% set options = params|resolve_options(params,{ required: ["action_index","action_edit","action_delete","entity"] }) %}

    {{ buttons.return_to_list({href: options.action_index}) }}
    {{ buttons.delete({ entity: options.entity, action: options.action_delete }) }}
    {{ buttons.edit({href: options.action_edit,entity: options.entity }) }}
{% endmacro show_actions %}

{#Botnones estandar de nuevo elemento#}
{% macro new_actions(params) %}
    {% import '@SFAdminLTE3/default/buttons.html.twig' as buttons %}

    {% set options = params|resolve_options(params,{ required: ["action_index"] }) %}

    {{ buttons.return_to_list({href: options.action_index}) }}
    {{ buttons.save_new() }}
    {{ buttons.save_and_close({action: options.action_index }) }}
{% endmacro new_actions %}

{#Botones estandar de edicion#}
{% macro edit_actions(params) %}
    {% import '@SFAdminLTE3/default/buttons.html.twig' as buttons %}

    {% set options = params|resolve_options(params,{ required: ["action_index","action_delete","action_show","entity"] }) %}

    {{ buttons.return_to_list({href: options.action_index}) }}
    {{ buttons.a({
        label: "button.list.show",
        href: options.action_show,
        class: "btn btn-link btn-sm",
        icon: "fas fa-eye",
        icon_separator: "mr-1"
        }) 
    }}
    {{ buttons.delete({ entity: options.entity, action: options.action_delete }) }}

    {{ buttons.save() }}
    {{ buttons.save_and_close({action: options.action_index }) }}
    {#<div class="btn-group">
        <button type="button" class="btn btn-primary"><i class="fas fa-save mr-2"></i>Guardar</button>
        <button type="button" class="btn btn-primary dropdown-toggle dropdown-icon" data-toggle="dropdown" aria-expanded="false">
            <span class="sr-only">Toggle Dropdown</span>
            <div class="dropdown-menu" role="menu" x-placement="bottom-start" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-1px, 37px, 0px);">
                <a class="dropdown-item" href="#">
                    <i class="fas fa-save mr-1 mr-2"></i>Guardar
                </a>
                <a class="dropdown-item" href="#"><i class="fas fa-save mr-1 mr-2"></i><i class="fas fa-list mr-2"></i>Guardar y cerrar</a>
                <a class="dropdown-item" href="#">Something else here</a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#">Ver</a>
            </div>
        </button>
    </div>#}



{% endmacro edit_actions %}

{# Botones de lista #}
{% macro list_actions(params) %}
    {% from '@SFAdminLTE3/default/buttons.html.twig' import a as a %}
    {% set options = params|resolve_options(params,{ required: ["action_show","action_edit","entity"] }) %}

    {{ a({
        label: "button.list.show",
        href: options.action_show,
        class: "btn btn-link btn-sm",
        icon: "fas fa-eye",
        icon_separator: "mr-1"
        }) 
    }}
    {{ a({
        label: "button.list.edit",
        href: options.action_edit,
        class: "btn btn-link btn-sm",
        icon: "fas fa-edit",
        icon_separator: "mr-1"
        }) 
    }}
{% endmacro list_actions %}

{# Boton de nuevo elemento #}
{% macro new(params) %}
    {% from '@SFAdminLTE3/default/buttons.html.twig' import save as save %}
    {% set options = {label: "button.new",class: "btn btn-primary" }|resolve_options(params,{ required: ["href","label","class"] }) %}

    {% from '@SFAdminLTE3/default/buttons.html.twig' import a as a %}
    {{ a({
        label: options.label,
        href: options.href,
        class: options.class,
        icon: "fas fa-plus",
        }) 
    }}
{% endmacro new %}

{# Boton de guardado de un nuevo elemento #}
{% macro save_new() %}
    {% from '@SFAdminLTE3/default/buttons.html.twig' import save as save %}
    {{ save({uri: constant('App\\Controller\\BaseController::ACTION_SAVE_NEW_VALUE')}) }}
{% endmacro save_new %}

{# Boton de guardar #}
{% macro save(params) %}
    {% set options = {uri: app.request.requestUri}|resolve_options(params,{ required: ["uri"] }) %}
    {% from '@SFAdminLTE3/default/buttons.html.twig' import button as button %}
    {{ button({
        label: "button.save",
        class: "btn btn-primary",
        type: "submit",
        icon: "fas fa-save",
        attr: { form: "form_main",name: constant('App\\Controller\\BaseController::ACTION_SAVE') , value: options.uri },
    }) }}
{% endmacro save %}

{# Boton de editar #}
{% macro edit(params) %}
    {% set options = {}|resolve_options(params,{ required: ["entity","href"] }) %}
    {% from '@SFAdminLTE3/default/buttons.html.twig' import a as a %}
    {% set params = {
        label: "button.edit",
        class: "btn btn-primary",
        icon: "fas fa-edit",
        href: options.href,
        permission: options.entity.canEdit(),
    } %}
    {{ a(params) }}
{% endmacro edit %}

{# Boton de guardar y cerrar #}
{% macro save_and_close(params) %}
    {% set options = {}|resolve_options(params,{ required: ["action"] }) %}

    {% from '@SFAdminLTE3/default/buttons.html.twig' import button as button %}

    {{ button({
        label: "button.save_and_close",
        class: "btn btn-primary",
        type: "submit",
        icon: "fas fa-list",
        icon_prepend: "fas fa-save mr-1",
        attr: { form: "form_main",name:constant('App\\Controller\\BaseController::ACTION_SAVE'), value: options.action },
    }) }}

{% endmacro save_and_close %}

{# Boton de retornar a la lista #}
{% macro return_to_list(params) %}
    {% from '@SFAdminLTE3/default/buttons.html.twig' import a as a %}
    {% set params = (params|default({}))|merge({
        label: "button.return_to_list",
        class: "btn btn-link",
        icon: "fas fa-list",
    }) %}
    {{ a(params) }}
{% endmacro return_to_list %}

{# Boton de cancelar #}
{% macro cancel(params) %}
    {% from '@SFAdminLTE3/default/buttons.html.twig' import a as a %}
    {% set params = (params|default({}))|merge({
        label: "button.cancel",
        class: "btn btn-cancel",
        icon: "fas fa-undo",
    }) %}
    {{ a(params) }}
{% endmacro cancel %}

{# Boton de elimiar con formulario con proteccion csrf #}
{% macro delete(params) %}
    {% set options = {}|resolve_options(params,{ required: ["action","entity"] }) %}

    {% from '@SFAdminLTE3/default/buttons.html.twig' import button as button %}

    {% set id = random() %}
    {% set formId = "form_delete_"~id %}
    {% set buttonId = "btn_delete_"~id %}
    {% if options.entity.canDelete %}
        {#    Colocar el formulario de eliminar con confirmacion#}
        <form method="POST" action="{{ options.action }}" id="{{ formId }}">
            <input type="hidden" name="_method" value="DELETE">
            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ options.entity.id) }}">
        </form>
        {{ button({
            label: "button.delete",
            class: "btn btn-danger",
            icon: "fas fa-minus-circle",
            attr: {id: buttonId}
        }) }}
        <script>
            document.addEventListener("DOMContentLoaded", function (event) {
                $("#{{ buttonId }}").on("click", function () {
                    Swal.fire({
                        title: '{{ "question.item.delete.title"|trans }}',
                        text: "{{ "question.item.delete.text"|trans }}",
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: '{{ "question.button.item.delete.yes"|trans }}',
                        cancelButtonText: '{{ "question.button.item.delete.no"|trans }}',
                    }).then((result) => {
                        if (result.value) {
                            $("#{{ formId }}").submit();
                        }
                    });
                });
            });
        </script>
    {% else %}
        {{ button({
            label: "button.delete",
            class: "btn btn-danger disabled",
            icon: "fas fa-minus-circle",
            attr: {}
        }) }}
    {% endif %}

{% endmacro delete %}

{# Boton de accion con formulario con proteccion csrf #}
{% macro action(params) %}
    {% set options = { class: "btn btn-primary",icon: null,input: {},extra_name: "_extra",extra_value: null }|resolve_options(params,{ required: ["action","entity","label","question"] }) %}
    {% set question = { title: ("question.title"|trans),confirm_button_text: "question.button.yes",cancel_button_text: "question.button.no" }|resolve_options(options.question,{ required: ["text"] }) %}
    {% set input = { type: null,placeholder: "question.input.place_holder.observation",validator: "question.input.validator.observation" }|resolve_options(options.input,{ required: ["type"],allowedValues: { type: [null,"textarea"] } }) %}

    {% from '@SFAdminLTE3/default/buttons.html.twig' import button as button %}

    {% set icon = "fas fa-check" %}
    {% if options.icon is null %}
        {% if options.class == "btn btn-danger" %}
            {% set icon = "fas fa-times-circle" %}
        {% endif %}
    {% endif %}
    {% set id = random() %}
    {% set id_token = random() %}
    {% set formId = "form_action_"~id %}
    {% set buttonId = "btn_action_"~id %}
    {% set extraId = "extra_"~id %}
    {#    Colocar el formulario de la accion con confirmacion#}
    <form method="POST" action="{{ options.action }}" id="{{ formId }}">
        <input type="hidden" name="_method" value="POST">
        <input type="hidden" name="_token" value="{{ csrf_token('action-'~id_token~ options.entity.id) }}">
        <input type="hidden" name="_check_token" value="{{ id_token }}">
        <input type="hidden" id="{{ extraId }}" name="{{ options.extra_name }}" value="{{ options.extra_value }}">
    </form>
    {{ button({
            label: options.label,
            class: options.class,
            icon: icon,
            attr: {id: buttonId}
        }) }}
    <script>
        document.addEventListener("DOMContentLoaded", function (event) {
            $("#{{ buttonId }}").on("click", function () {
                Swal.fire({
                    title: '{{ question.title }}',
                    text: "{{ question.text }}",
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: '{{ question.confirm_button_text|trans }}',
                    cancelButtonText: '{{ question.cancel_button_text|trans }}',
                    {% if input.type is not null %}
                    input: '{{ input.type }}',
                    inputPlaceholder: '{{ input.placeholder|trans }}',
                    inputValidator: (value) => {
                        if (!value) {
                            return '{{ input.validator|trans }}'
                        }
                    }
                    {% endif %}
                }).then((result) => {
                    if (result.value) {
{#                        $('#{{ formId }} input[name=_extra]').val(result.value);#}
                        $('#{{ formId }} input[id={{ extraId }}]').val(result.value);
                        $("#{{ formId }}").submit();
                    }
                });
            });
        });
    </script>


{% endmacro action %}

{# Constructor  de "button" generico #}
{% macro button(params) %}
    {% set defaults = { label: null,icon: null,icon_prepend:null, class: 'btn btn-primary',type: null,attr: {} } %}
    {% set options = defaults|resolve_options(params,{ allowedValues: { type: ['submit',null] } }) %}

    {% set attr = options.attr %}
    {% set attr = attr|merge({class: options.class}) %}
    {% if options.type %}
        {% set attr = attr|merge({type: options.type}) %}
    {% endif %}
    <button {{ block('attributes') }}>{% if options.icon_prepend %}<i class="{{ options.icon_prepend }} mr-2"></i>{% endif %}<i class="{{ options.icon }} mr-2"></i>{{ options.label|trans }}</button>
        {% endmacro button %}

{# Constructor de "a" generico #}
{% macro a(params) %}
    {% set defaults = { label: null,icon: null,icon_prepend:null, class: 'btn btn-primary',icon_separator: "mr-2",target: null,attr: {},question: { title: null, text: null},permission: true } %}
    {% set options = defaults|resolve_options(params,{ required: ["href"] }) %}

    {% set id = random() %}
    {% set aId = "btn_a_"~id %}

    {% set attr = options.attr %}

    {% set question = { title: ("question.title"|trans),confirm_button_text: "question.button.yes",cancel_button_text: "question.button.no" }|resolve_options(options.question,{ required: ["text"] }) %}
    {% if options.permission %}
        {% set attr = attr|merge({class: options.class, href: options.href, target: options.target,id: aId}) %}
        <a {{ block('attributes') }}>{% if options.icon_prepend %}<i class="{{ options.icon_prepend }} {{ options.icon_separator }}"></i>{% endif %}<i class="{{ options.icon }} {{ options.icon_separator }}"></i>{{ options.label|trans }}</a>
                {% if question.text is not null %}
            <script>
                document.addEventListener("DOMContentLoaded", function (event) {
                    $("#{{ aId }}").on("click", function () {
                        Swal.fire({
                            title: '{{ question.title }}',
                            text: "{{ question.text }}",
                            icon: 'question',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: '{{ question.confirm_button_text|trans }}',
                            cancelButtonText: '{{ question.cancel_button_text|trans }}',
                        }).then((result) => {
                            if (result.value) {
                                window.location.href = $("#{{ aId }}").attr("href");
                            }
                        });
                        return false;
                    });
                });
            </script>
        {% endif %}
    {% else %}
        {% set attr = attr|merge({class: options.class ~ " disabled", href: ""}) %}
        <a {{ block('attributes') }}>{% if options.icon_prepend %}<i class="{{ options.icon_prepend }} {{ options.icon_separator }}"></i>{% endif %}<i class="{{ options.icon }} {{ options.icon_separator }}"></i>{{ options.label|trans }}</a>
    {% endif %}
{% endmacro a %}